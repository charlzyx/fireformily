(self["webpackChunkfireformily"]=self["webpackChunkfireformily"]||[]).push([[275],{22231:function(n,e,t){"use strict";t.d(e,{m:function(){return o.m}});var o=t(9684);t(72255)},43696:function(n,e,t){"use strict";t.r(e),t.d(e,{default:function(){return F}});var o=t(13378),r=t(67294),i=JSON.parse('{"menus":{"en-US":{"/components":[{"title":"\u7ec4\u4ef6\u6982\u89c8","meta":{"order":0,"__fallback":true},"children":[],"path":"/components"},{"title":"\u4f18\u96c5\u9605\u8bfb\u6001\u7ec4\u4ef6","meta":{"order":1,"__fallback":true},"children":[{"path":"/components/dict","title":"\ud83d\udcd5 Dict - \u8fdc\u7a0b\u8bcd\u5178","meta":{}},{"path":"/components/image-view","title":"\ud83c\udf0c ImageView - \u56fe\u7247\u67e5\u770b","meta":{}},{"path":"/components/long-text","title":"\ud83d\udcc4 LongText - \u957f\u6587\u672c","meta":{}}]},{"title":"\u589e\u5f3a\u7ec4\u4ef6","meta":{"order":2,"__fallback":true},"children":[{"path":"/components/linkage","title":"\ud83d\udd87 Linkage - \u7ea7\u8054\u67e5\u8be2","meta":{}},{"path":"/components/suggestion","title":"\ud83e\ude84 Suggestion - \u8054\u60f3\u641c\u7d22","meta":{}}]},{"title":"Pro \u7ec4\u4ef6","meta":{"order":3,"__fallback":true},"children":[{"path":"/components/pop-actions","title":"\ud83d\udd2a PopActions - \u5f39\u7a97\u52a8\u4f5c","meta":{}},{"path":"/components/query-list","title":"\ud83d\ude80 QueryList - \u67e5\u8be2\u8868\u683c","meta":{}},{"path":"/components/tree-nodes","title":"\ud83c\udf84 TreeNodes - \u6811","meta":{}}]}],"/pro":[{"title":"\u6700\u4f73\u5b9e\u8df5","meta":{"order":1,"__fallback":true},"children":[{"path":"/pro/dict","title":"\ud83d\udcd5 Dict - \u8fdc\u7a0b\u8bcd\u5178","meta":{}},{"path":"/pro/tree-base","title":"\ud83c\udf84 TreeBase - \u57fa\u7840\u6811","meta":{}}]},{"title":"\u54cd\u5e94\u5f0f\u7f16\u7a0b in React","meta":{"sort":1,"__fallback":true},"children":[{"path":"/pro/live","title":"useLive - \u54cd\u5e94\u5f0f in React","meta":{}}]}],"*":[{"path":"/","title":"Index","meta":{}}]}},"locales":[{"name":"en-US","label":"English"}],"navs":{"en-US":[{"path":"/pro","title":"\u6700\u4f73?\u5b9e\u8df5"},{"title":"\u7ec4\u4ef6","path":"/components"},{"title":"Github","path":"https://github.com/charlzyx/fireformily"},{"title":"formily","path":"https://github.com/alibaba/formily"}]},"title":"fireformily","logo":"/fireformily/images/fireformily.svg","mode":"site","repository":{"url":"https://github.com/charlzyx/fireformily","branch":"master"},"theme":{}}'),a=t(95211),s=t(68699),c=t(60535),l="import {\n  FormGrid,\n  FormItem,\n  FormLayout,\n  Input,\n  Select,\n  Space,\n  Radio,\n  Checkbox,\n} from '@formily/antd';\nimport { createForm } from '@formily/core';\nimport { createSchemaField, FormProvider } from '@formily/react';\nimport { dict, Dict, dictEffects, registerDictLoader } from 'fireformily';\nimport React from 'react';\n\nconst loaders = {\n  bool: () => {\n    registerDictLoader('bool', (convert) => {\n      return Promise.resolve([\n        { label: '\u662f', value: 1, color: 'success' },\n        { label: '\u5426', value: 0, color: 'error' },\n      ]).then((list) => {\n        return convert(list);\n      });\n    });\n  },\n  status: () => {\n    registerDictLoader('status', (convert) => {\n      return Promise.resolve([\n        { label: '\u5df2\u4e0a\u7ebf', value: 0, color: 'success' },\n        { label: '\u8fd0\u884c\u4e2d', value: 1, color: 'processing' },\n        { label: '\u5173\u95ed', value: 2, color: 'default' },\n        { label: '\u5df2\u5b95\u673a', value: 3, color: 'error' },\n        { label: '\u5df2\u8d85\u8f7d', value: 4, color: 'warning' },\n      ]).then((list) => {\n        return convert(list);\n      });\n    });\n  },\n  classify: () => {\n    registerDictLoader('classify', (convert) => {\n      return Promise.resolve([\n        { label: '\u6587\u827a', value: 0 },\n        { label: '\u559c\u5267', value: 1 },\n        { label: '\u7231\u60c5', value: 2 },\n        { label: '\u52a8\u753b', value: 3 },\n        { label: '\u60ac\u7591', value: 4 },\n        { label: '\u79d1\u5e7b', value: 5 },\n      ]).then((list) => {\n        return convert(list);\n      });\n    });\n  },\n};\n\nconst SchemaField = createSchemaField({\n  components: {\n    FormItem,\n    Input,\n    Select,\n    Radio,\n    Checkbox,\n    FormGrid,\n    FormLayout,\n    Dict,\n    Space,\n  },\n  scope: {\n    dict,\n  },\n});\n\nconst form = createForm({\n  effects(fform) {\n    dictEffects(fform);\n  },\n});\n\nloaders.bool();\nloaders.status();\nloaders.classify();\n\ntype SchemaShape = React.ComponentProps<typeof SchemaField>['schema'];\n\nconst schema: SchemaShape = {\n  type: 'object',\n  properties: {\n    layout: {\n      type: 'void',\n      'x-decorator': 'FormLayout',\n      'x-decorator-props': {\n        layout: 'vertical',\n      },\n      'x-component': 'FormGrid',\n      'x-component-props': {\n        maxColumns: 2,\n        minColumns: 2,\n      },\n      properties: {\n        dict: {\n          title: 'DICT \u53ea\u8bfb\u7ec4\u4ef6',\n          type: 'string',\n          'x-decorator': 'FormItem',\n          'x-component': 'Dict',\n          'x-data': {\n            dict: 'classify',\n          },\n          'x-value': [1, 3],\n        },\n        dict2: {\n          title: 'DICT \u53ea\u8bfb\u7ec4\u4ef6 TAG \u5f62\u6001',\n          type: 'string',\n          'x-decorator': 'FormItem',\n          'x-component': 'Dict',\n          'x-component-props': {\n            type: 'tag',\n          },\n          'x-data': {\n            dict: 'classify',\n          },\n          'x-value': [1, 3],\n        },\n        select1: {\n          title: '\u591a\u9009 SELECT',\n          type: 'string',\n          'x-decorator': 'FormItem',\n          'x-component': 'Select',\n          'x-component-props': {\n            mode: 'multiple',\n          },\n          'x-data': {\n            dict: 'classify',\n          },\n        },\n        select1badge: {\n          title: '\u591a\u9009 SELECT READ PRETTY \u5fbd\u7ae0\u5f62\u6001',\n          type: 'string',\n          'x-read-pretty': true,\n          'x-reactions': {\n            dependencies: ['.select1'],\n            fulfill: {\n              schema: {\n                'x-value': '{{$deps[0]}}',\n              },\n            },\n          },\n          'x-decorator': 'FormItem',\n          'x-component': 'Select',\n          'x-component-props': {\n            type: 'badge',\n          },\n          'x-data': {\n            dict: 'classify',\n          },\n        },\n        select2: {\n          title: '\u5355\u9009 SELECT',\n          type: 'string',\n          'x-decorator': 'FormItem',\n          'x-component': 'Select',\n          'x-data': {\n            dict: 'classify',\n          },\n        },\n        slect2tag: {\n          title: '\u5355\u9009 SELECT pretty \u6807\u7b7e\u5f62\u6001',\n          type: 'string',\n          'x-read-pretty': true,\n          'x-reactions': {\n            dependencies: ['.select2'],\n            fulfill: {\n              schema: {\n                'x-value': '{{$deps[0]}}',\n              },\n            },\n          },\n          'x-decorator': 'FormItem',\n          'x-component': 'Select',\n          'x-component-props': {\n            type: 'tag',\n          },\n          'x-data': {\n            dict: 'classify',\n          },\n        },\n        radio: {\n          title: 'Radio \u5355\u9009',\n          type: 'string',\n          'x-decorator': 'FormItem',\n          'x-component': 'Radio.Group',\n          'x-data': {\n            dict: 'status',\n          },\n        },\n        radiobadge: {\n          title: 'Radio \u5355\u9009 pretty \u5fbd\u7ae0\u5f62\u6001',\n          type: 'string',\n          'x-read-pretty': true,\n          'x-reactions': {\n            dependencies: ['.radio'],\n            fulfill: {\n              schema: {\n                'x-value': '{{$deps[0]}}',\n              },\n            },\n          },\n          'x-decorator': 'FormItem',\n          'x-component': 'Radio.Group',\n          'x-component-props': {\n            type: 'badge',\n          },\n          'x-data': {\n            dict: 'status',\n          },\n        },\n        checkbox: {\n          title: 'Checkbox \u591a\u9009',\n          type: 'string',\n          'x-decorator': 'FormItem',\n          'x-component': 'Checkbox.Group',\n          'x-data': {\n            dict: 'status',\n          },\n        },\n        checkboxtag: {\n          title: 'Checkbox  \u591a\u9009 pretty \u6807\u7b7e\u5f62\u6001',\n          type: 'string',\n          'x-read-pretty': true,\n          'x-reactions': {\n            dependencies: ['.checkbox'],\n            fulfill: {\n              schema: {\n                'x-value': '{{$deps[0]}}',\n              },\n            },\n          },\n          'x-decorator': 'FormItem',\n          'x-component': 'Checkbox.Group',\n          'x-component-props': {\n            type: 'tag',\n          },\n          'x-data': {\n            dict: 'status',\n          },\n        },\n      },\n    },\n  },\n};\n\nconst DictDemo = () => {\n  return (\n    <FormProvider form={form}>\n      <SchemaField schema={schema} />\n    </FormProvider>\n  );\n};\n\nexport default DictDemo;",p="import { OptionData } from 'fireformily';\nexport const remote =\n  'https://unpkg.com/china-location@2.1.0/dist/location.json';\nexport const flat = (\n  json: Record<\n    string,\n    {\n      name: string;\n      code: string;\n      children?: {\n        name: string;\n        code: string;\n        children?: { name: string; code: string }[];\n      }[];\n      cities: Record<\n        string,\n        {\n          name: string;\n          code: string;\n          children?: {\n            name: string;\n            code: string;\n          }[];\n          districts: Record<string, string>;\n        }\n      >;\n    }\n  >,\n) => {\n  const flatten: { parent?: string; code: string; name: string }[] = [];\n\n  const tree = Object.values(json).map((province) => {\n    flatten.push({ code: province.code, name: province.name });\n    province.children = Object.values(province.cities).map((city) => {\n      // \u62cd\u5e73\u7684\u7ed3\u6784\u8981\u6c42 parentId \u4e0d\u80fd\u91cd\u590d, \u8fd9\u4e2a\u6570\u636e\u91cc\u9762\u76f4\u8f96\u5e02\u662f\u4e00\u6837\u7684, \u641e\u4e00\u4e0b\n      const cityCode =\n        city.code === province.code ? `${city.code}00` : city.code;\n\n      flatten.push({\n        code: cityCode,\n        name: city.name,\n        parent: province.code,\n      });\n      city.children = Object.entries(city.districts).map(([code, name]) => {\n        const distCode =\n          code === cityCode || code == province.code ? `${code}0000` : code;\n        flatten.push({ code: distCode, name, parent: cityCode });\n        return { code, name } as any;\n      });\n      return city;\n    });\n    return province;\n  });\n  return { flatten, tree };\n};\n\nexport const getById = (parent?: React.Key) => {\n  return fetch(remote)\n    .then((res) => res.json())\n    .then((origin) => flat(origin))\n    .then(({ flatten }) => {\n      return flatten.filter((x) => x.parent === parent);\n    });\n};\n\nexport const loadAll = () => {\n  return fetch(remote)\n    .then((res) => res.json())\n    .then((origin) => flat(origin))\n    .then(({ tree }) => {\n      const current = tree?.map((item: any) => ({\n        label: item.name,\n        value: item.code,\n        isLeaf: false,\n        children: item.children?.map((child: any) => {\n          return {\n            label: child.name,\n            value: child.code,\n            isLeaf: false,\n            children: child.children.map((godson: any) => {\n              return {\n                label: godson.name,\n                value: godson.code,\n                isLeaf: true,\n              };\n            }),\n          };\n        }),\n      }));\n      // console.log('current', current);\n      return current;\n    });\n};\n\nexport const loadData = (options: OptionData[]) => {\n  // unshift root id\n  const keys = [undefined, ...options.map((x) => x.value)];\n  const last = options[options.length - 1];\n  // \u6ca1\u6709label \u6216\u8005 __init \u6807\u7b7e\u8868\u660e\u662f\u521d\u59cb\u503c, \u5c31\u5168\u90e8\u52a0\u8f7d\n  const shouldLoadAll = Boolean(\n    options.find((x) => x.label === undefined || x.__init),\n  );\n  if (shouldLoadAll) {\n    return Promise.all(keys.map(getById)).then((optionsList) => {\n      const ret = optionsList.reduceRight((children: any, opts: any, idx) => {\n        if (!children) {\n          return opts.map((item: any) => ({\n            value: item.code,\n            label: item.name,\n            isLeaf: true,\n          }));\n        } else {\n          return opts.map((item: any) => {\n            const isMyChild = item.code === keys[idx + 1];\n            return {\n              value: item.code,\n              label: item.name,\n              isLeaf: false,\n              children: isMyChild ? children : undefined,\n            };\n          });\n        }\n      }, null);\n      return ret;\n    });\n  } else {\n    // \u5426\u5219\u662f\u5355\u72ec\u52a0\u8f7d\n    return getById(last?.value).then((opts) =>\n      opts.map((item) => {\n        return {\n          value: item.code,\n          label: item.name,\n          // \u9700\u8981\u7ed9\u51fa\u53f6\u5b50\u6761\u4ef6, \u8fd9\u91cc\u6211\u4eec\u662f\u7701\u5e02\u533a3\u7ea7, \u6240\u4ee5keys\u957f\u5ea6\u662f3\u7684\u65f6\u5019\u5c31\u5230\u6700\u540e\u4e00\u7ea7\u522b\u4e86\n          isLeaf: keys.length === 3,\n        };\n      }),\n    );\n  }\n};",d="import {\n  ArrayTable,\n  DatePicker,\n  Editable,\n  FormGrid,\n  FormItem,\n  FormLayout,\n  Input,\n  Select,\n  Space,\n} from '@formily/antd';\nimport { ConfigProvider } from 'antd';\nimport zhCN from 'antd/es/locale/zh_CN';\nimport React from 'react';\nimport { createForm } from '@formily/core';\nimport { createSchemaField, FormProvider } from '@formily/react';\nimport {\n  PopActions,\n  QueryForm,\n  ImageView,\n  QueryList,\n  LongText,\n  QueryTable,\n  Dict,\n  dictEffects,\n} from 'fireformily';\nimport { actions, service, loaders, onSort } from './shared';\n\nconst SchemaField = createSchemaField({\n  components: {\n    QueryList,\n    QueryForm,\n    FormItem,\n    Input,\n    Select,\n    FormGrid,\n    FormLayout,\n    DatePicker,\n    Editable,\n    QueryTable,\n    ArrayTable,\n    PopActions,\n    ImageView,\n    Dict,\n    LongText,\n    Space,\n  },\n  scope: {\n    service,\n    onSort,\n    actions,\n  },\n});\n\nconst form = createForm({\n  effects(fform) {\n    dictEffects(fform);\n  },\n});\n\nloaders.bool();\nloaders.status();\nloaders.classify();\n\ntype SchemaShape = React.ComponentProps<typeof SchemaField>['schema'];\n\nconst getEidtProperties = (): SchemaShape => {\n  return {\n    properties: {\n      domain: {\n        title: '\u57df\u540d',\n        type: 'string',\n        required: true,\n        'x-decorator': 'FormItem',\n        'x-component': 'Input',\n      },\n      classify: {\n        title: '\u5206\u7c7b',\n        type: 'string',\n        'x-decorator': 'FormItem',\n        'x-component': 'Select',\n        'x-component-props': {\n          mode: 'multiple',\n        },\n        'x-data': {\n          dict: 'classify',\n        },\n      },\n      status: {\n        title: '\u72b6\u6001',\n        type: 'string',\n        'x-decorator': 'FormItem',\n        'x-component': 'Select',\n        'x-data': {\n          dict: 'status',\n        },\n      },\n      date: {\n        title: '\u4e0a\u7ebf\u65f6\u95f4',\n        type: 'string',\n        'x-decorator': 'FormItem',\n        'x-component': 'DatePicker',\n      },\n    },\n  };\n};\n\nconst query: SchemaShape = {\n  type: 'object',\n  'x-component': 'QueryForm',\n  'x-decorator': 'FormLayout',\n  'x-decorator-props': {\n    layout: 'vertical',\n  },\n  properties: {\n    domain: {\n      title: '\u57df\u540d',\n      type: 'string',\n      'x-decorator': 'FormItem',\n      'x-component': 'Input',\n    },\n    classify: {\n      title: '\u5206\u7c7b',\n      type: 'string',\n      'x-decorator': 'FormItem',\n      'x-component': 'Select',\n      'x-component-props': {\n        mode: 'multiple',\n      },\n      'x-data': {\n        dict: 'classify',\n      },\n    },\n    status: {\n      title: '\u72b6\u6001',\n      type: 'string',\n      'x-decorator': 'FormItem',\n      'x-component': 'Select',\n      'x-data': {\n        dict: 'status',\n      },\n    },\n    '[start, end]': {\n      title: '\u65e5\u671f\u533a\u95f4',\n      type: 'string',\n      'x-decorator': 'FormItem',\n      'x-decorator-props': {\n        gridSpan: 2,\n      },\n      'x-component': 'DatePicker.RangePicker',\n    },\n  },\n};\n\nconst titlebar: SchemaShape = {\n  title: '\u67e5\u8be2\u5217\u8868',\n  type: 'void',\n  'x-component': 'QueryTable.Titlebar',\n  properties: {\n    selection: {\n      type: 'void',\n      'x-component': 'QueryTable.Selection',\n      properties: {\n        batchExp: {\n          type: 'object',\n          title: '\u6279\u91cf\u5bfc\u51fa',\n          'x-component': 'PopActions.Popover',\n          'x-component-props': {\n            actions: '{{actions.batch}}',\n          },\n        },\n        batchDelete: {\n          type: 'object',\n          title: '\u6279\u91cf\u5220\u9664',\n          'x-component': 'PopActions.Popconfirm',\n          'x-component-props': {\n            actions: '{{actions.batch}}',\n          },\n        },\n      },\n    },\n    popover: {\n      title: '\u65b0\u589e',\n      type: 'object',\n      'x-content': 'Popover content',\n      'x-component': 'PopActions',\n      'x-component-props': {\n        actions: '{{actions.add}}',\n        type: 'primary',\n      },\n      properties: getEidtProperties()?.properties,\n    },\n  },\n};\n\nconst list: SchemaShape = {\n  type: 'array',\n  'x-decorator': 'FormItem',\n  'x-component': 'QueryTable',\n  'x-component-props': {\n    scroll: { x: '100%' },\n    onSort: `{{onSort}}`,\n    expandable: {\n      rowExpandable: (row: any) => {\n        return row.subdomains.length > 0;\n      },\n    },\n  },\n  items: {\n    type: 'object',\n    properties: {\n      sort: {\n        type: 'void',\n        'x-component': 'QueryTable.Column',\n        'x-component-props': {\n          width: 80,\n          title: '\u6392\u5e8f',\n          align: 'center',\n        },\n        properties: {\n          sort: {\n            type: 'void',\n            'x-component': 'QueryTable.SortHandle',\n          },\n        },\n      },\n      index: {\n        type: 'void',\n        'x-component': 'QueryTable.Column',\n        'x-component-props': {\n          width: 80,\n          title: '\u5e8f\u53f7',\n          align: 'center',\n        },\n        properties: {\n          index: {\n            type: 'void',\n            'x-component': 'QueryTable.Index',\n          },\n        },\n      },\n      id: {\n        type: 'void',\n        'x-component': 'QueryTable.Column',\n        'x-component-props': {\n          title: 'ID',\n          sorter: (a: any, b: any) => a.id - b.id,\n        },\n        properties: {\n          id: {\n            type: 'string',\n            'x-read-pretty': true,\n            'x-decorator': 'FormItem',\n            'x-component': 'Input',\n          },\n        },\n      },\n      status: {\n        type: 'void',\n        'x-component': 'QueryTable.Column',\n        'x-component-props': {\n          title: '\u72b6\u6001',\n        },\n        properties: {\n          status: {\n            type: 'string',\n            'x-read-pretty': true,\n            'x-data': {\n              dict: 'status',\n            },\n            'x-decorator': 'FormItem',\n            'x-component': 'Select',\n            'x-component-props': {\n              type: 'badge',\n            },\n          },\n        },\n      },\n      domain: {\n        type: 'void',\n        'x-component': 'QueryTable.Column',\n        'x-component-props': {\n          title: '\u57df\u540d',\n          filters: `{{$records ? $records.reduce((list, record) => {\n              if (list.find(x => record.domain.includes(x.value))) return list;\n              const parts = record.domain.split('.');\n              list.push({ text: '.'+parts[parts.length - 1],  value: '.'+parts[parts.length - 1] });\n              return list;\n            }, []): []}}`,\n          onFilter: (value: string, record: any) =>\n            record.domain.includes(value),\n        },\n        properties: {\n          domain: {\n            type: 'string',\n            'x-decorator': 'FormItem',\n            'x-component': 'LongText',\n          },\n        },\n      },\n      classify: {\n        type: 'void',\n        'x-component': 'QueryTable.Column',\n        'x-component-props': {\n          title: '\u7c7b\u578b\u6807\u7b7e',\n        },\n        properties: {\n          classify: {\n            type: 'array',\n            'x-read-pretty': true,\n            'x-decorator': 'FormItem',\n            'x-component': 'Select',\n            'x-component-props': {\n              type: 'tag',\n              mode: 'multiple',\n            },\n            'x-data': {\n              dict: 'classify',\n            },\n          },\n        },\n      },\n      img: {\n        type: 'void',\n        'x-component': 'QueryTable.Column',\n        'x-component-props': {\n          title: '\u56fe\u7247',\n        },\n        properties: {\n          img: {\n            type: 'string',\n            'x-decorator': 'FormItem',\n            'x-component': 'ImageView',\n          },\n        },\n      },\n      date: {\n        type: 'void',\n        'x-component': 'QueryTable.Column',\n        'x-component-props': {\n          title: '\u4e0a\u7ebf\u65f6\u95f4',\n        },\n        properties: {\n          date: {\n            type: 'string',\n            'x-read-pretty': true,\n            'x-decorator': 'FormItem',\n            'x-component': 'DatePicker',\n          },\n        },\n      },\n      operations: {\n        type: 'void',\n        'x-component': 'QueryTable.Operations',\n        'x-component-props': {\n          title: '\u64cd\u4f5c',\n          width: '240px',\n          fixed: 'right',\n        },\n        properties: {\n          popconfirm: {\n            title: '\u5220\u9664',\n            type: 'object',\n            'x-content': '\u786e\u5b9a\u8981\u5220\u9664\u8fd9\u4e00\u6761\u8bb0\u5f55\u5417?',\n            'x-component': 'PopActions.Popconfirm',\n            'x-component-props': {\n              actions: '{{actions.remove}}',\n            },\n            properties: {},\n          },\n          drawer: {\n            title: '\u7f16\u8f91',\n            type: 'object',\n            'x-content': 'Drawer content',\n            'x-component': 'PopActions.Drawer',\n            'x-component-props': {\n              actions: '{{actions.update}}',\n            },\n            properties: getEidtProperties()?.properties,\n          },\n        },\n      },\n    },\n  },\n  properties: {\n    expandable: {\n      type: 'void',\n      'x-component': 'QueryTable.Expandable',\n      properties: {\n        subdomains: {\n          type: 'void',\n          'x-component': 'QueryList',\n          properties: {\n            titlebar: {\n              type: 'void',\n              title: '\u4e8c\u7ea7\u57df\u540d',\n              'x-component': 'QueryTable.Titlebar',\n              properties: {\n                add: {\n                  title: '\u65b0\u589e',\n                  type: 'object',\n                  'x-content': 'Modal content',\n                  'x-component': 'PopActions',\n                  'x-component-props': {\n                    actions: '{{actions.add}}',\n                  },\n                  properties: {\n                    owner: {\n                      title: 'Owner',\n                      type: 'string',\n                      'x-decorator': 'FormItem',\n                      'x-component': 'Input',\n                    },\n                    domain: {\n                      title: '\u57df\u540d',\n                      type: 'string',\n                      'x-decorator': 'FormItem',\n                      'x-component': 'Input',\n                    },\n                  },\n                },\n              },\n            },\n            subdomains: {\n              type: 'array',\n              'x-component': 'QueryTable',\n              items: {\n                type: 'object',\n                properties: {\n                  owner: {\n                    type: 'void',\n                    'x-component': 'QueryTable.Column',\n                    'x-component-props': {\n                      title: 'Owner',\n                    },\n                    properties: {\n                      owner: {\n                        type: 'string',\n                        'x-read-pretty': true,\n                        'x-decorator': 'FormItem',\n                        'x-component': 'Input',\n                      },\n                    },\n                  },\n                  domain: {\n                    type: 'void',\n                    'x-component': 'QueryTable.Column',\n                    'x-component-props': {\n                      title: '\u57df\u540d',\n                    },\n                    properties: {\n                      domain: {\n                        type: 'string',\n                        'x-read-pretty': true,\n                        'x-decorator': 'FormItem',\n                        'x-component': 'Input',\n                      },\n                    },\n                  },\n                  operations: {\n                    type: 'void',\n                    'x-component': 'QueryTable.Operations',\n                    'x-component-props': {\n                      title: '\u64cd\u4f5c',\n                      width: '200px',\n                    },\n                    properties: {\n                      popconfirm: {\n                        title: '\u5220\u9664',\n                        type: 'object',\n                        'x-content': '\u786e\u5b9a\u8981\u5220\u9664\u8fd9\u4e00\u6761\u8bb0\u5f55\u5417?',\n                        'x-component': 'PopActions.Popconfirm',\n                        'x-component-props': {\n                          actions: '{{actions.remove}}',\n                        },\n                        properties: {},\n                      },\n                      drawer: {\n                        title: '\u7f16\u8f91',\n                        type: 'object',\n                        'x-content': 'Drawer content',\n                        'x-component': 'PopActions',\n                        'x-component-props': {\n                          actions: '{{actions.update}}',\n                        },\n                        properties: {\n                          owner: {\n                            type: 'string',\n                            'x-decorator': 'FormItem',\n                            'x-component': 'Input',\n                          },\n                          domain: {\n                            type: 'string',\n                            'x-decorator': 'FormItem',\n                            'x-component': 'Input',\n                          },\n                        },\n                      },\n                    },\n                  },\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nconst schema: SchemaShape = {\n  type: 'object',\n  properties: {\n    querylist: {\n      type: 'void',\n      'x-component': 'QueryList',\n      'x-component-props': {\n        size: 'small',\n        service: '{{service}}',\n      },\n      properties: {\n        query,\n        titlebar,\n        list,\n      },\n    },\n  },\n};\n\nexport const QueryListAll = () => {\n  return (\n    <div style={{ padding: '20px' }}>\n      <ConfigProvider locale={zhCN}>\n        <FormProvider form={form}>\n          <SchemaField schema={schema} />\n        </FormProvider>\n      </ConfigProvider>\n    </div>\n  );\n};\n\nexport default QueryListAll;",m="import moment from 'moment';\nimport { registerDictLoader, PopActions } from 'fireformily';\n\nimport { faker } from '@faker-js/faker';\n\nimport React from 'react';\n\ntype TActions = React.ComponentProps<typeof PopActions>['actions'];\n\nfaker.setLocale('zh_CN');\n\nconst log = (label: string, x: any) => {\n  console.log('LABEL:', label);\n  try {\n    console.group(JSON.parse(JSON.stringify(x)));\n  } catch (error) {\n    console.log('stringify error, origin: ', x);\n  }\n  console.groupEnd();\n};\n\nexport const service = ({\n  params,\n  pagination,\n  sorter,\n  filters,\n  extra,\n}: any) => {\n  log('search sevice args ', { params, pagination, sorter, filters, extra });\n\n  const {\n    start = moment().toDate(),\n    end = moment().add(1, 'year').toDate(),\n    classify,\n    status,\n    domain,\n  } = params || {};\n  const { current, pageSize } = pagination || {};\n\n  return Promise.resolve().then(() => {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const total = 45;\n        const list = Array.from({\n          length: current * pageSize > total ? total % pageSize : pageSize,\n        }).map((_, idx) => {\n          return {\n            id: current * pageSize + idx,\n            status: status ?? +faker.random.numeric(1) % 5,\n            domain: `${\n              domain ? `${domain}.` : ''\n            }${faker.internet.domainName()}`,\n            subdomains: Array.from(\n              new Set(\n                Array.from({\n                  length: Math.floor(Math.random() * 3),\n                }).map(() => faker.internet.domainName()),\n              ),\n            ).map((item) => {\n              return {\n                owner: faker.company.name(),\n                domain: item,\n              };\n            }),\n            classify:\n              classify ??\n              Array.from(\n                new Set(\n                  Array.from({ length: Math.floor(Math.random() * 3) }).map(\n                    () => +faker.random.numeric(1) % 5,\n                  ),\n                ),\n              ),\n            date: moment(faker.date.between(start, end)).format('YYYY-MM-DD'),\n            img: faker.image.avatar(),\n            desc: faker.lorem.paragraph(),\n          };\n        });\n        log('search response ', { list, total });\n\n        resolve({\n          list,\n          total,\n        });\n      }, 456);\n    });\n  });\n};\n\nexport const onSort = (\n  oldIndex: number,\n  neoIndex: number,\n  array: any[],\n  scope: any,\n) => {\n  log('on sort args ', { oldIndex, neoIndex, array, scope });\n\n  return Promise.resolve();\n};\n\nexport const actions: {\n  [k: string]: TActions;\n} = {\n  batch: {\n    load: (scope) => {\n      log('batch load args', scope);\n      return Promise.resolve(scope.$record);\n    },\n    cancel: (scope) => {\n      log('batch cancel args', scope);\n    },\n    submit: (data, scope) => {\n      log('batch submit args', { data, scope });\n\n      return Promise.resolve();\n    },\n  },\n  add: {\n    load: (scope) => {\n      log('add load args', scope);\n      return Promise.resolve(scope.$record);\n    },\n    cancel: (scope) => {\n      log('add cancel args', scope);\n    },\n    submit: (data, scope) => {\n      log('add submit args', { data, scope });\n\n      return Promise.resolve();\n    },\n  },\n  update: {\n    load: (scope) => {\n      log('update load args', scope);\n      return Promise.resolve(scope.$record);\n    },\n    cancel: (scope) => {\n      log('update cancel args', scope);\n    },\n    submit: (data, scope) => {\n      log('update submit args', { data, scope });\n      return Promise.resolve();\n    },\n  },\n  remove: {\n    load: (scope) => {\n      log('remove load args', scope);\n      return Promise.resolve(scope.$record);\n    },\n    cancel: (scope) => {\n      log('remove cancel args', scope);\n    },\n    submit: (data, scope) => {\n      log('remove submit args', { data, scope });\n      return Promise.resolve();\n    },\n  },\n};\n\nexport const loaders = {\n  bool: () => {\n    registerDictLoader('bool', (convert) => {\n      return Promise.resolve([\n        { label: '\u662f', value: 1, color: 'success' },\n        { label: '\u5426', value: 0, color: 'error' },\n      ]).then((list) => {\n        return convert(list);\n      });\n    });\n  },\n  status: () => {\n    registerDictLoader('status', (convert) => {\n      return Promise.resolve([\n        { label: '\u5df2\u4e0a\u7ebf', value: 0, color: 'success' },\n        { label: '\u8fd0\u884c\u4e2d', value: 1, color: 'processing' },\n        { label: '\u5173\u95ed', value: 2, color: 'default' },\n        { label: '\u5df2\u5b95\u673a', value: 3, color: 'error' },\n        { label: '\u5df2\u8d85\u8f7d', value: 4, color: 'warning' },\n      ]).then((list) => {\n        return convert(list);\n      });\n    });\n  },\n  classify: () => {\n    registerDictLoader('classify', (convert) => {\n      return Promise.resolve([\n        { label: '\u6587\u827a', value: 0 },\n        { label: '\u559c\u5267', value: 1 },\n        { label: '\u7231\u60c5', value: 2 },\n        { label: '\u52a8\u753b', value: 3 },\n        { label: '\u60ac\u7591', value: 4 },\n        { label: '\u79d1\u5e7b', value: 5 },\n      ]).then((list) => {\n        return convert(list);\n      });\n    });\n  },\n};",u="import { FormGrid, FormItem, FormLayout } from '@formily/antd';\nimport { createForm } from '@formily/core';\nimport { createSchemaField, FormProvider } from '@formily/react';\nimport { Suggestion } from 'fireformily';\nimport React from 'react';\nimport { suggest } from './mock';\n\nconst Code = (props: { value: any }) => {\n  return (\n    <div>\n      <pre>\n        <code>{JSON.stringify(props.value, null, 2)}</code>\n      </pre>\n    </div>\n  );\n};\n\nconst SchemaField = createSchemaField({\n  components: {\n    FormGrid,\n    FormLayout,\n    FormItem,\n    Suggestion,\n    Code,\n  },\n  scope: {\n    suggest,\n  },\n});\n\nconst form = createForm({\n  effects(fform) {},\n});\n\ntype SchemaShape = React.ComponentProps<typeof SchemaField>['schema'];\n\nconst schema: SchemaShape = {\n  type: 'object',\n  properties: {\n    layout: {\n      type: 'void',\n      'x-decorator': 'FormLayout',\n      'x-decorator-props': {\n        layout: 'vertical',\n      },\n      'x-component': 'FormGrid',\n      'x-component-props': {\n        maxColumns: 4,\n        minColumns: 2,\n      },\n      properties: {\n        s1: {\n          title: '\u6dd8\u5b9d\u641c\u7d22',\n          description: 'string',\n          type: 'string',\n          'x-decorator': 'FormItem',\n          'x-component': 'Suggestion',\n          'x-component-props': {\n            suggest: '{{suggest}}',\n          },\n        },\n        s2: {\n          title: '\u6dd8\u5b9d\u641c\u7d22',\n          description: 'labelInValue',\n          type: 'string',\n          'x-decorator': 'FormItem',\n          'x-component': 'Suggestion',\n          'x-component-props': {\n            labelInValue: true,\n            suggest: '{{suggest}}',\n          },\n        },\n        s3: {\n          title: '\u6dd8\u5b9d\u641c\u7d22',\n          description: 'multiple',\n          type: 'string',\n          'x-decorator': 'FormItem',\n          'x-component': 'Suggestion',\n          'x-component-props': {\n            multiple: true,\n            suggest: '{{suggest}}',\n          },\n        },\n        s4: {\n          title: '\u6dd8\u5b9d\u641c\u7d22',\n          description: 'multiple & labelInValue',\n          type: 'string',\n          'x-decorator': 'FormItem',\n          'x-component': 'Suggestion',\n          'x-component-props': {\n            multiple: true,\n            labelInValue: true,\n            suggest: '{{suggest}}',\n          },\n        },\n        code: {\n          type: 'object',\n          'x-component': 'Code',\n          'x-decorator': 'FormItem',\n          'x-decorator-props': {\n            span: 4,\n          },\n          'x-reactions': {\n            dependencies: ['.s1', '.s2', '.s3', '.s4'],\n            fulfill: {\n              schema: {\n                'x-value': `{{{string: $deps[0], labelInValue: $deps[1], multiple: $deps[2],multipleAndLabelInValue: $deps[3]} }}`,\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nconst SuggestDemo = () => {\n  return (\n    <FormProvider form={form}>\n      <SchemaField schema={schema} />\n    </FormProvider>\n  );\n};\n\nexport default SuggestDemo;",f="import jsonp from 'fetch-jsonp';\nimport qs from 'qs';\n\nexport const suggest = (params: object & { kw: string }) => {\n  console.log('search params', params);\n  const str = qs.stringify({\n    code: 'utf-8',\n    q: params.kw,\n  });\n  return jsonp(`https://suggest.taobao.com/sug?${str}`)\n    .then((response: any) => response.json())\n    .then((d: any) => {\n      const { result } = d;\n      const data: { label: string; value: string }[] = result.map(\n        (item: any) => {\n          return {\n            value: item[0] as string,\n            label: item[0] as string,\n          };\n        },\n      );\n      return data;\n    });\n};",g="import { RobotOutlined } from '@ant-design/icons';\nimport { FormItem, Input, Space } from '@formily/antd';\nimport { createForm } from '@formily/core';\nimport {\n  createSchemaField,\n  FormProvider,\n  useExpressionScope,\n} from '@formily/react';\nimport { Button } from 'antd';\nimport { PopActions, safeStringify, TreeBase, TreeNodes } from 'fireformily';\n\nimport { useMemo, useState } from 'react';\nimport { actions, loadData } from './mock';\n\nconst form = createForm();\n\nconst Debug = (props: { value: any }) => {\n  const [posInput, setPosInput] = useState('');\n  const pos = useMemo(() => {\n    return posInput\n      .split('-')\n      .filter((x) => x != '')\n      .map(Number)\n      .filter((n) => !Number.isNaN(n));\n  }, [posInput]);\n  const node = TreeBase.usePosNode?.(pos);\n  return (\n    <div>\n      <div>Input Node Pos</div>\n      <Input\n        placeholder=\"\u4f8b\u5982: 2-0-1\"\n        value={posInput}\n        onChange={(e) => setPosInput(e.target.value)}\n      ></Input>\n      <Button\n        type={node && pos.length > 0 ? 'primary' : 'dashed'}\n        onClick={() => {\n          if (!node) {\n            console.log('---not found node by pos', pos);\n            return;\n          }\n          console.groupCollapsed('\u70b9\u51fb\u67e5\u770b node scope');\n          console.group('---node.$pos');\n          console.log(safeStringify(node.$pos));\n          console.groupEnd();\n\n          console.group('---node.$record');\n          console.log(safeStringify(node.$record));\n          console.groupEnd();\n\n          console.group('---node.$index');\n          console.log(safeStringify(node.$index));\n          console.groupEnd();\n\n          console.group('---node.$records');\n          console.log(safeStringify(node.$records));\n          console.groupEnd();\n\n          console.group('---node.$extra');\n          console.log(safeStringify(node.$extra));\n          console.groupEnd();\n\n          console.group('---node.$root');\n          console.log(safeStringify(node.$root));\n          console.groupEnd();\n        }}\n      >\n        LOOK NODE SCOPE\n      </Button>\n    </div>\n  );\n};\n\nconst ScopeLogger = () => {\n  const scope = useExpressionScope();\n  return (\n    <RobotOutlined\n      onClick={() => {\n        console.groupCollapsed('\u70b9\u51fb\u67e5\u770b scope');\n\n        console.group('---scope.$pos');\n        console.log(safeStringify(scope.$pos));\n        console.groupEnd();\n\n        console.group('---scope.$record');\n        console.log(safeStringify(scope.$record));\n        console.groupEnd();\n\n        console.group('---scope.$index');\n        console.log(safeStringify(scope.$index));\n        console.groupEnd();\n\n        console.group('---scope.$records');\n        console.log(safeStringify(scope.$records));\n        console.groupEnd();\n\n        console.group('---scope.$extra');\n        console.log(safeStringify(scope.$extra));\n        console.groupEnd();\n\n        console.group('---scope.$root');\n        console.log(safeStringify(scope.$root));\n        console.groupEnd();\n      }}\n    />\n  );\n};\n\nconst NodeHeader = (props: { count: number }) => {\n  return <div>{`\u5171\u6709 ${props.count} \u4e2a\u4e0b\u7ea7`}</div>;\n};\n\nconst NodeFooter = (props: any) => {\n  const scope = useExpressionScope();\n\n  return (\n    <div style={{ margin: '8px 0' }}>\n      <hr />\n      SHOULD BE FOOTER\n      <Button\n        size=\"small\"\n        onClick={() => {\n          return scope.$lookup.children.push({\n            value: scope.$pos.join('+'),\n            label: 'neo',\n          });\n        }}\n        // icon={<FileAddOutlined></FileAddOutlined>}\n        type=\"primary\"\n      >\n        index: {scope.$index} | length: {scope.$records.length} | pos:{' '}\n        {scope.$pos.join(',')}\n        {props.hidden ? 'true' : 'false'}\n      </Button>\n    </div>\n  );\n};\n\nconst SchemaField = createSchemaField({\n  components: {\n    TreeNodes,\n    Space,\n    PopActions,\n    NodeHeader,\n    NodeFooter,\n    Debug,\n    ScopeLogger,\n    Input,\n    FormItem,\n  },\n  scope: {\n    loadData,\n    actions,\n  },\n});\n\nconst schema: React.ComponentProps<typeof SchemaField>['schema'] = {\n  type: 'object',\n  properties: {\n    layout: {\n      type: 'void',\n      'x-component': 'Space',\n      'x-component-props': {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n        },\n      },\n\n      properties: {\n        tree: {\n          type: 'object',\n          'x-decorator': 'FormItem',\n          'x-component': 'TreeNodes',\n          'x-component-props': {\n            loadData: '{{loadData}}',\n            checkable: true,\n            selectable: true,\n            draggable: true,\n            layout: {\n              align: 'top',\n            },\n          },\n          items: {\n            type: 'object',\n            properties: {\n              // _header: {\n              //   type: \"void\",\n              //   \"x-visible\": \"{{$index === 0}}\",\n              //   \"x-component-props\": \"{{{count: $records && $records.length}}}\",\n              //   \"x-component\": \"NodeHeader\",\n              // },\n              pos: {\n                type: 'void',\n                'x-component': 'TreeNodes.Pos',\n              },\n              label: {\n                type: 'string',\n                // \"x-decorator\": \"FormItem\",\n                // \"x-read-pretty\": true,\n                'x-component': 'Input',\n                'x-component-props': {\n                  size: 'small',\n                  style: {\n                    width: '140px',\n                  },\n                },\n              },\n              moveup: {\n                type: 'void',\n                'x-component': 'TreeNodes.Move',\n                'x-component-props': {\n                  to: 'up',\n                },\n              },\n              movedown: {\n                type: 'void',\n                'x-component': 'TreeNodes.Move',\n                'x-component-props': {\n                  to: 'down',\n                },\n              },\n              remove: {\n                type: 'void',\n                'x-component': 'TreeNodes.Remove',\n              },\n              copy: {\n                type: 'void',\n                'x-component': 'TreeNodes.Copy',\n                'x-component-props': {\n                  clone: (old: any) =>\n                    JSON.parse(\n                      JSON.stringify(old, (k, v) => {\n                        if (k === 'value') {\n                          return `clone_${v}`;\n                        } else {\n                          return v;\n                        }\n                      }),\n                    ),\n                },\n              },\n              add: {\n                type: 'void',\n                'x-component': 'TreeNodes.Append',\n                'x-component-props': {\n                  factory: (parent: any) => {\n                    return {\n                      label: `${parent.label}\u4e4b ${\n                        parent.children?.length ?? 0\n                      } \u5b50`,\n                      value: `${parent.value}${parent.children?.length ?? 0}`,\n                    };\n                  },\n                },\n              },\n              edit: {\n                title: '\u7f16\u8f91',\n                type: 'object',\n                'x-component': 'PopActions',\n                'x-component-props': {\n                  actions: '{{actions.update}}',\n                },\n                properties: {\n                  label: {\n                    type: 'string',\n                    'x-decorator': 'FormItem',\n                    'x-component': 'Input',\n                  },\n                  value: {\n                    type: 'string',\n                    'x-decorator': 'FormItem',\n                    'x-component': 'Input',\n                  },\n                },\n              },\n              scopelog: {\n                type: 'void',\n                'x-component': 'ScopeLogger',\n              },\n              // _footer: {\n              //   type: \"void\",\n              //   \"x-hidden\": \"{{!$last}}\",\n              //   \"x-component\": \"NodeFooter\",\n              // },\n            },\n          },\n\n          properties: {\n            code: {\n              type: 'object',\n              'x-component': 'Debug',\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nconst TreeNodesDemo = () => {\n  return (\n    <FormProvider form={form}>\n      <SchemaField schema={schema}></SchemaField>\n    </FormProvider>\n  );\n};\n\nexport default TreeNodesDemo;",y="import { safeStringify, OptionData, PopActions } from 'fireformily';\n\nexport const remote =\n  'https://unpkg.com/china-location@2.1.0/dist/location.json';\nexport const flat = (\n  json: Record<\n    string,\n    {\n      name: string;\n      code: string;\n      children?: {\n        name: string;\n        code: string;\n        children?: { name: string; code: string }[];\n      }[];\n      cities: Record<\n        string,\n        {\n          name: string;\n          code: string;\n          children?: {\n            name: string;\n            code: string;\n          }[];\n          districts: Record<string, string>;\n        }\n      >;\n    }\n  >,\n) => {\n  const flatten: { parent?: string; code: string; name: string }[] = [];\n\n  const MAX = 4;\n  const tree = Object.values(json)\n    .map((province, idx) => {\n      if (idx > MAX) return;\n      flatten.push({ code: province.code, name: province.name });\n      province.children = Object.values(province.cities)\n        .map((city, cidx) => {\n          if (cidx > MAX) return null as any;\n          // \u62cd\u5e73\u7684\u7ed3\u6784\u8981\u6c42 parentId \u4e0d\u80fd\u91cd\u590d, \u8fd9\u4e2a\u6570\u636e\u91cc\u9762\u76f4\u8f96\u5e02\u662f\u4e00\u6837\u7684, \u641e\u4e00\u4e0b\n          const cityCode =\n            city.code === province.code ? `${city.code}00` : city.code;\n\n          flatten.push({\n            code: cityCode,\n            name: city.name,\n            parent: province.code,\n          });\n\n          city.children = Object.entries(city.districts)\n            .map(([code, name], didx) => {\n              if (didx > MAX) return;\n\n              const distCode =\n                code === cityCode || code == province.code\n                  ? `${code}0000`\n                  : code;\n              flatten.push({ code: distCode, name, parent: cityCode });\n              return { code, name } as any;\n            })\n            .filter(Boolean);\n          return city;\n        })\n        .filter(Boolean);\n      return province;\n    })\n    .filter(Boolean);\n  return { flatten, tree };\n};\n\nexport const getById = (parent?: React.Key) => {\n  return fetch(remote)\n    .then((res) => res.json())\n    .then((origin) => flat(origin))\n    .then(({ flatten }) => {\n      return flatten.filter((x) => x.parent === parent);\n    });\n};\n\nexport const loadAll = () => {\n  return fetch(remote)\n    .then((res) => res.json())\n    .then((origin) => flat(origin))\n    .then(({ tree }) => {\n      const current = tree?.map((item: any) => ({\n        label: item.name,\n        value: item.code,\n        isLeaf: false,\n        children: item.children?.map((child: any) => {\n          return {\n            label: child.name,\n            value: child.code,\n            isLeaf: false,\n            children: child.children.map((godson: any) => {\n              return {\n                label: godson.name,\n                value: godson.code,\n                isLeaf: true,\n              };\n            }),\n          };\n        }),\n      }));\n      // console.log('current', current);\n      return current;\n    });\n};\n\nexport const loadData = (options: OptionData[]) => {\n  // unshift root id\n  const keys = [undefined, ...options.map((x) => x.value)];\n  const last = options[options.length - 1];\n  // \u6ca1\u6709label \u6216\u8005 __init \u6807\u7b7e\u8868\u660e\u662f\u521d\u59cb\u503c, \u5c31\u5168\u90e8\u52a0\u8f7d\n  const shouldLoadAll = Boolean(\n    options.find((x) => x.label === undefined || x.__init),\n  );\n  if (shouldLoadAll) {\n    return Promise.all(keys.map(getById)).then((optionsList) => {\n      const ret = optionsList.reduceRight((children: any, opts: any, idx) => {\n        if (!children) {\n          return opts.map((item: any) => ({\n            value: item.code,\n            label: item.name,\n            isLeaf: true,\n          }));\n        } else {\n          return opts.map((item: any) => {\n            const isMyChild = item.code === keys[idx + 1];\n            return {\n              value: item.code,\n              label: item.name,\n              isLeaf: false,\n              children: isMyChild ? children : undefined,\n            };\n          });\n        }\n      }, null);\n      return ret;\n    });\n  } else {\n    // \u5426\u5219\u662f\u5355\u72ec\u52a0\u8f7d\n    return getById(last?.value).then((opts) =>\n      opts.map((item) => {\n        return {\n          value: item.code,\n          label: item.name,\n          // \u9700\u8981\u7ed9\u51fa\u53f6\u5b50\u6761\u4ef6, \u8fd9\u91cc\u6211\u4eec\u662f\u7701\u5e02\u533a3\u7ea7, \u6240\u4ee5keys\u957f\u5ea6\u662f3\u7684\u65f6\u5019\u5c31\u5230\u6700\u540e\u4e00\u7ea7\u522b\u4e86\n          isLeaf: keys.length === 3,\n        };\n      }),\n    );\n  }\n};\ntype TActions = React.ComponentProps<typeof PopActions>['actions'];\n\nconst log = (label: string, x: any) => {\n  console.log('LABEL:', label);\n  try {\n    console.group(safeStringify(x));\n  } catch (error) {\n    console.log('stringify error, origin: ', x);\n  }\n  console.groupEnd();\n};\n\nexport const actions: {\n  [name: string]: TActions;\n} = {\n  update: {\n    load: (scope) => {\n      log('add load args', scope);\n      return Promise.resolve(scope.$record);\n    },\n    cancel: (scope) => {\n      log('add cancel args', scope);\n    },\n    submit: (data, scope) => {\n      log('add submit args', { data, scope });\n\n      return Promise.resolve();\n    },\n  },\n};\n\nexport const events = {\n  onCopy: (params: any) => {\n    log('onCopy args', params);\n  },\n  onMove: (params: any) => {\n    log('onMove args', params);\n  },\n  onRemove: (params: any) => {\n    log('onRemove args', params);\n  },\n  onAdd: (params: any) => {\n    log('onAdd args', params);\n  },\n};",v="import React from 'react';\nimport { useLive } from 'fireformily';\n\nconst TodoList = () => {\n  const $todos = useLive<{ title: string; done: boolean }[]>([]);\n\n  const getCount = () =>\n    `${$todos.filter((x) => x.done).length}/${$todos.length}`;\n\n  return (\n    <div live>\n      <h1>\n        \u571f\u8c46\u4e1d {getCount()}{' '}\n        {$todos.length > 0 && $todos.every((x) => x.done) ? '\ud83c\udf89' : ''}\n      </h1>\n\n      <div>\n        {$todos.map((item, idx) => {\n          return (\n            <div\n              style={{\n                width: '400px',\n                display: 'flex',\n                justifyContent: 'space-between',\n                padding: 8,\n              }}\n              key={idx}\n            >\n              <input\n                type=\"checkbox\"\n                checked={item.done}\n                onChange={() => {\n                  item.done = !item.done;\n                }}\n              />\n              <input\n                value={item.title}\n                type=\"text\"\n                onInput={(e) => {\n                  item.title = (e.target as any).value;\n                }}\n              />\n              <div\n                onClick={() => {\n                  $todos.splice(idx, 1);\n                }}\n              >\n                \u4e22\u5230\u5783\u573e\u6876\u91cc\u9762\n              </div>\n            </div>\n          );\n        })}\n      </div>\n      <div\n        onClick={() => {\n          $todos.push({ title: '', done: false });\n        }}\n      >\n        \u70b9\u6211!\u5207\u4e00\u6761\u65b0\u7684\u571f\u8c46\u4e1d\n      </div>\n    </div>\n  );\n};\n\nexport default TodoList;",x="import { useLive } from 'fireformily';\nimport { Observer } from '@formily/react';\nimport React from 'react';\n\nconst App = () => {\n  const data = useLive({ count: 1, input: '' });\n\n  return (\n    <Observer>\n      {() => {\n        return (\n          <div>\n            <input\n              type=\"text\"\n              value={data.input}\n              onChange={(e) => (data.input = e.target.value)}\n            />\n\n            <div>\n              <div>{data.input}</div>\n              <div>{data.count}</div>\n              <div\n                onClick={() => {\n                  data.count++;\n                  data.count++;\n                  data.input = data.count.toString();\n                }}\n              >\n                ADD\n              </div>\n            </div>\n          </div>\n        );\n      }}\n    </Observer>\n  );\n};\n\nexport default App;",h="import { useLive } from 'fireformily';\nimport React from 'react';\n\nconst App = () => {\n  const data = useLive({ count: 1, input: '' });\n  return (\n    <div live>\n      <input\n        type=\"text\"\n        value={data.input}\n        onChange={(e) => (data.input = e.target.value)}\n      />\n\n      <div live>\n        <div>{data.input}</div>\n        <div>{data.count}</div>\n        <div\n          onClick={() => {\n            data.count++;\n            data.count++;\n            data.input = data.count.toString();\n          }}\n        >\n          ADD\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;",b={"dict-dictdemo":{component:(0,c.D8)({loader:function(){var n=(0,s.Z)((0,a.Z)().mark((function n(){return(0,a.Z)().wrap((function(n){while(1)switch(n.prev=n.next){case 0:return n.next=2,Promise.all([t.e(337),t.e(467),t.e(591),t.e(965),t.e(50)]).then(t.bind(t,35758));case 2:return n.abrupt("return",n.sent.default);case 3:case"end":return n.stop()}}),n)})));function e(){return n.apply(this,arguments)}return e}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:l}},dependencies:{"@formily/antd":{version:"2.2.5",css:"@formily/antd/dist/antd.css"},"@formily/core":{version:"2.2.5"},"@formily/react":{version:"2.2.5"},fireformily:{version:"0.1.17"},react:{version:">=16.8.0"},"@ant-design/icons":{version:"4.x"},"@types/react":{version:">=16.8.0"},"@types/react-dom":{version:">=16.8.0"},antd:{version:"<=4.22.8",css:"antd/dist/antd.css"},"react-dom":{version:">=16.8.0"},"react-is":{version:">=16.8.0"}},identifier:"dict-dictdemo"}},"ImageView-demo":{component:(0,c.D8)({loader:function(){var n=(0,s.Z)((0,a.Z)().mark((function n(){var e,o,r,i,s;return(0,a.Z)().wrap((function(n){while(1)switch(n.prev=n.next){case 0:return e=t(42857).default,n.t0=e,n.next=4,Promise.resolve().then(t.t.bind(t,67294,19));case 4:return n.t1=n.sent,o=(0,n.t0)(n.t1),n.next=8,Promise.all([t.e(337),t.e(467),t.e(591),t.e(965),t.e(553)]).then(t.bind(t,40020));case 8:return r=n.sent,i=function(){return o["default"].createElement(r.ImageView,{value:"https://img.alicdn.com/imgextra/i3/O1CN01xlETZk1G0WSQT6Xii_!!6000000000560-55-tps-800-800.svg"})},s=i,n.abrupt("return",s);case 12:case"end":return n.stop()}}),n)})));function e(){return n.apply(this,arguments)}return e}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:"import React from 'react';\nimport { ImageView } from 'fireformily';\n\nconst App = () => {\n  return <ImageView value=\"https://img.alicdn.com/imgextra/i3/O1CN01xlETZk1G0WSQT6Xii_!!6000000000560-55-tps-800-800.svg\" />\n}\n\nexport default App;\n"}},dependencies:{react:{version:"18.2.0"},fireformily:{version:"0.1.17"}},componentName:"ImageView",title:"\u5355\u5f20",identifier:"ImageView-demo"}},"ImageView-demo-1":{component:(0,c.D8)({loader:function(){var n=(0,s.Z)((0,a.Z)().mark((function n(){var e,o,r,i,s,c;return(0,a.Z)().wrap((function(n){while(1)switch(n.prev=n.next){case 0:return e=t(42857).default,n.t0=e,n.next=4,Promise.resolve().then(t.t.bind(t,67294,19));case 4:return n.t1=n.sent,o=(0,n.t0)(n.t1),n.next=8,Promise.all([t.e(337),t.e(467),t.e(591),t.e(965),t.e(553)]).then(t.bind(t,40020));case 8:return r=n.sent,i=["https://img.alicdn.com/imgextra/i1/O1CN01bHdrZJ1rEOESvXEi5_!!6000000005599-55-tps-800-800.svg","https://img.alicdn.com/imgextra/i3/O1CN01xlETZk1G0WSQT6Xii_!!6000000000560-55-tps-800-800.svg"],s=function(){return o["default"].createElement(r.ImageView,{value:i})},c=s,n.abrupt("return",c);case 13:case"end":return n.stop()}}),n)})));function e(){return n.apply(this,arguments)}return e}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:"import React from 'react';\nimport { ImageView } from 'fireformily';\nconst uris = [\n  'https://img.alicdn.com/imgextra/i1/O1CN01bHdrZJ1rEOESvXEi5_!!6000000005599-55-tps-800-800.svg',\n  'https://img.alicdn.com/imgextra/i3/O1CN01xlETZk1G0WSQT6Xii_!!6000000000560-55-tps-800-800.svg',\n]\nconst App = () => {\n  return <ImageView value={uris} />\n}\n\nexport default App;\n"}},dependencies:{react:{version:"18.2.0"},fireformily:{version:"0.1.17"}},componentName:"ImageView",title:"\u591a\u5f20",identifier:"ImageView-demo-1"}},"Linkage-demo":{component:(0,c.D8)({loader:function(){var n=(0,s.Z)((0,a.Z)().mark((function n(){var e,o,r,i,s,c,l;return(0,a.Z)().wrap((function(n){while(1)switch(n.prev=n.next){case 0:return e=t(44938).default,o=t(42857).default,n.t0=o,n.next=5,Promise.resolve().then(t.bind(t,44742));case 5:return n.t1=n.sent,r=(0,n.t0)(n.t1),n.t2=e,n.next=10,Promise.resolve().then(t.t.bind(t,67294,19));case 10:return n.t3=n.sent,i=(0,n.t2)(n.t3),n.next=14,Promise.all([t.e(337),t.e(467),t.e(591),t.e(965),t.e(553)]).then(t.bind(t,40020));case 14:return s=n.sent,n.next=17,t.e(312).then(t.bind(t,85050));case 17:return c=n.sent,l=function(){var n=(0,i.useState)([]),e=(0,r["default"])(n,2),t=e[0],o=e[1];return(0,i.useEffect)((function(){console.log("--value",t)}),[t]),i["default"].createElement(s.Linkage,{loadData:c.loadData,value:t,onChange:o})},n.abrupt("return",l);case 20:case"end":return n.stop()}}),n)})));function e(){return n.apply(this,arguments)}return e}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:"import React, { useEffect, useState } from 'react';\nimport { Linkage } from 'fireformily'\nimport { loadData } from './demos/mock'\n\nexport default () => {\n  const [value, setValue] = useState([]);\n\n  useEffect(() => {\n    console.log('--value', value);\n  }, [value]);\n\n  return (\n    <Linkage\n      loadData={loadData}\n      value={value}\n      onChange={setValue}\n    ></Linkage>\n  );\n};"},"demos/mock.ts":{import:"./demos/mock",content:p}},dependencies:{react:{version:"18.2.0"},fireformily:{version:"0.1.17"}},componentName:"Linkage",title:"Cascader like",identifier:"Linkage-demo"}},"Linkage-demo-1":{component:(0,c.D8)({loader:function(){var n=(0,s.Z)((0,a.Z)().mark((function n(){var e,o,r,i,s,c,l;return(0,a.Z)().wrap((function(n){while(1)switch(n.prev=n.next){case 0:return e=t(44938).default,o=t(42857).default,n.t0=o,n.next=5,Promise.resolve().then(t.bind(t,44742));case 5:return n.t1=n.sent,r=(0,n.t0)(n.t1),n.t2=e,n.next=10,Promise.resolve().then(t.t.bind(t,67294,19));case 10:return n.t3=n.sent,i=(0,n.t2)(n.t3),n.next=14,Promise.all([t.e(337),t.e(467),t.e(591),t.e(965),t.e(553)]).then(t.bind(t,40020));case 14:return s=n.sent,n.next=17,t.e(312).then(t.bind(t,85050));case 17:return c=n.sent,l=function(){var n=(0,i.useState)(["110000","110000","110105"]),e=(0,r["default"])(n,2),t=e[0],o=e[1];return(0,i.useEffect)((function(){console.log("--value",t)}),[t]),i["default"].createElement(s.Linkage,{loadAll:c.loadAll,value:t,onChange:o})},n.abrupt("return",l);case 20:case"end":return n.stop()}}),n)})));function e(){return n.apply(this,arguments)}return e}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:"import React, { useEffect, useState } from 'react';\nimport { Linkage } from 'fireformily'\nimport { loadAll } from './demos/mock'\n\nexport default () => {\n  const [value, setValue] = useState(['110000', '110000', '110105']);\n\n  useEffect(() => {\n    console.log('--value', value);\n  }, [value]);\n\n  return (\n    <Linkage\n      loadAll={loadAll}\n      value={value}\n      onChange={setValue}\n    ></Linkage>\n  );\n};"},"demos/mock.ts":{import:"./demos/mock",content:p}},dependencies:{react:{version:"18.2.0"},fireformily:{version:"0.1.17"}},componentName:"Linkage",title:"loadAll & \u53cd\u663e",identifier:"Linkage-demo-1"}},"Linkage-demo-2":{component:(0,c.D8)({loader:function(){var n=(0,s.Z)((0,a.Z)().mark((function n(){var e,o,r,i,s,c,l;return(0,a.Z)().wrap((function(n){while(1)switch(n.prev=n.next){case 0:return e=t(44938).default,o=t(42857).default,n.t0=o,n.next=5,Promise.resolve().then(t.bind(t,44742));case 5:return n.t1=n.sent,r=(0,n.t0)(n.t1),n.t2=e,n.next=10,Promise.resolve().then(t.t.bind(t,67294,19));case 10:return n.t3=n.sent,i=(0,n.t2)(n.t3),n.next=14,Promise.all([t.e(337),t.e(467),t.e(591),t.e(965),t.e(553)]).then(t.bind(t,40020));case 14:return s=n.sent,n.next=17,t.e(312).then(t.bind(t,85050));case 17:return c=n.sent,l=function(){var n=(0,i.useState)(["110000","11000000","110105"]),e=(0,r["default"])(n,2),t=e[0],o=e[1];return(0,i.useEffect)((function(){console.log("--value",t)}),[t]),i["default"].createElement(s.Linkage,{loadData:c.loadData,value:t,onChange:o})},n.abrupt("return",l);case 20:case"end":return n.stop()}}),n)})));function e(){return n.apply(this,arguments)}return e}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:"import React, { useEffect, useState } from 'react';\nimport { Linkage } from 'fireformily'\nimport { loadData } from './demos/mock'\n\nexport default () => {\n  const [value, setValue] = useState(['110000', '11000000', '110105']);\n\n  useEffect(() => {\n    console.log('--value', value);\n  }, [value]);\n\n  return (\n    <Linkage\n      loadData={loadData}\n      value={value}\n      onChange={setValue}\n    ></Linkage>\n  );\n};"},"demos/mock.ts":{import:"./demos/mock",content:p}},dependencies:{react:{version:"18.2.0"},fireformily:{version:"0.1.17"}},componentName:"Linkage",title:"loadData & \u53cd\u663e",identifier:"Linkage-demo-2"}},"Linkage-demo-3":{component:(0,c.D8)({loader:function(){var n=(0,s.Z)((0,a.Z)().mark((function n(){var e,o,r,i,s,c,l;return(0,a.Z)().wrap((function(n){while(1)switch(n.prev=n.next){case 0:return e=t(44938).default,o=t(42857).default,n.t0=o,n.next=5,Promise.resolve().then(t.bind(t,44742));case 5:return n.t1=n.sent,r=(0,n.t0)(n.t1),n.t2=e,n.next=10,Promise.resolve().then(t.t.bind(t,67294,19));case 10:return n.t3=n.sent,i=(0,n.t2)(n.t3),n.next=14,Promise.all([t.e(337),t.e(467),t.e(591),t.e(965),t.e(553)]).then(t.bind(t,40020));case 14:return s=n.sent,n.next=17,t.e(312).then(t.bind(t,85050));case 17:return c=n.sent,l=function(){var n=(0,i.useState)([{value:"110000",label:"\u5317\u4eac\u5e02"},{value:"11000000",label:"\u5317\u4eac\u5e02"},{value:"110105",label:"\u671d\u9633\u533a"}]),e=(0,r["default"])(n,2),t=e[0],o=e[1];return(0,i.useEffect)((function(){console.log("--value",t)}),[t]),i["default"].createElement(s.Linkage,{loadData:c.loadData,labelInValue:!0,value:t,onChange:o})},n.abrupt("return",l);case 20:case"end":return n.stop()}}),n)})));function e(){return n.apply(this,arguments)}return e}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:'import React, { useEffect, useState } from \'react\';\nimport { Linkage } from \'fireformily\'\nimport { loadData } from \'./demos/mock\'\n\nexport default () => {\n  const [value, setValue] = useState([\n    {\n        "value": "110000",\n        "label": "\u5317\u4eac\u5e02"\n    },\n    {\n        "value": "11000000",\n        "label": "\u5317\u4eac\u5e02"\n    },\n    {\n        "value": "110105",\n        "label": "\u671d\u9633\u533a"\n    }\n  ]);\n\n  useEffect(() => {\n    console.log(\'--value\', value);\n  }, [value]);\n\n  return (\n    <Linkage\n      loadData={loadData}\n      labelInValue\n      value={value}\n      onChange={setValue}\n    ></Linkage>\n  );\n};'},"demos/mock.ts":{import:"./demos/mock",content:p}},dependencies:{react:{version:"18.2.0"},fireformily:{version:"0.1.17"}},componentName:"Linkage",title:"labelInValue & \u53cd\u663e",identifier:"Linkage-demo-3"}},"LongText-demo":{component:(0,c.D8)({loader:function(){var n=(0,s.Z)((0,a.Z)().mark((function n(){var e,o,r,i,s;return(0,a.Z)().wrap((function(n){while(1)switch(n.prev=n.next){case 0:return e=t(42857).default,n.t0=e,n.next=4,Promise.resolve().then(t.t.bind(t,67294,19));case 4:return n.t1=n.sent,o=(0,n.t0)(n.t1),n.next=8,Promise.all([t.e(337),t.e(467),t.e(591),t.e(965),t.e(553)]).then(t.bind(t,40020));case 8:return r=n.sent,i=function(){return o["default"].createElement(r.LongText,{value:"\n\u5982\u4f55\u5b66\u4e60 Formily\n\u5b66\u4e60\u5efa\u8bae\nFormily \u7528\u4e00\u53e5\u8bdd\u6765\u63cf\u8ff0\uff0c\u5b83\u5c31\u662f\u4e00\u4e2a\u62bd\u8c61\u4e86\u8868\u5355\u9886\u57df\u6a21\u578b\u7684 MVVM \u8868\u5355\u89e3\u51b3\u65b9\u6848\uff0c\u6240\u4ee5\uff0c\u5982\u679c\u4f60\u60f3\u6df1\u5165\u4f7f\u7528 Formily\uff0c\u90a3\u5fc5\u987b\u5b66\u4e60\u5e76\u4e86\u89e3 Formily \u7684\u9886\u57df\u6a21\u578b\u5230\u5e95\u662f\u548b\u6837\u7684\uff0c\u5b83\u5230\u5e95\u89e3\u51b3\u4e86\u54ea\u4e9b\u95ee\u9898\uff0c\u4e86\u89e3\u5b8c\u9886\u57df\u6a21\u578b\u4e4b\u540e\uff0c\u5176\u5b9e\u5c31\u662f\u5982\u4f55\u6d88\u8d39\u8fd9\u4e2a\u9886\u57df\u6a21\u578b\u7684\u89c6\u56fe\u5c42\u4e86\uff0c\u8fd9\u4e00\u5c42\u5c31\u53ea\u9700\u8981\u770b\u5177\u4f53\u7ec4\u4ef6\u7684\u6587\u6863\u5373\u53ef\u4e86\u3002\n\n\u5173\u4e8e\u6587\u6863\n\u56e0\u4e3a Formily \u7684\u5b66\u4e60\u6210\u672c\u8fd8\u662f\u6bd4\u8f83\u9ad8\u7684\uff0c\u60f3\u8981\u5feb\u901f\u4e86\u89e3 Formily \u7684\u5168\u8c8c\uff0c\u6700\u91cd\u8981\u7684\u8fd8\u662f\u770b\u6587\u6863\uff0c\u53ea\u662f\u6587\u6863\u600e\u4e48\u770b\uff0c\u4ece\u54ea\u91cc\u770b\u4f1a\u6bd4\u8f83\u91cd\u8981\uff0c\u4e0b\u9762\u6211\u4eec\u9488\u5bf9\u4e0d\u540c\u7528\u6237\u7ed9\u51fa\u4e86\u4e0d\u540c\u7684\u6587\u6863\u5b66\u4e60\u8def\u7ebf\u3002\n  "})},s=i,n.abrupt("return",s);case 12:case"end":return n.stop()}}),n)})));function e(){return n.apply(this,arguments)}return e}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:"import React from 'react';\nimport { LongText } from 'fireformily';\n\nconst App = () => {\n  return <LongText value={`\n\u5982\u4f55\u5b66\u4e60 Formily\n\u5b66\u4e60\u5efa\u8bae\nFormily \u7528\u4e00\u53e5\u8bdd\u6765\u63cf\u8ff0\uff0c\u5b83\u5c31\u662f\u4e00\u4e2a\u62bd\u8c61\u4e86\u8868\u5355\u9886\u57df\u6a21\u578b\u7684 MVVM \u8868\u5355\u89e3\u51b3\u65b9\u6848\uff0c\u6240\u4ee5\uff0c\u5982\u679c\u4f60\u60f3\u6df1\u5165\u4f7f\u7528 Formily\uff0c\u90a3\u5fc5\u987b\u5b66\u4e60\u5e76\u4e86\u89e3 Formily \u7684\u9886\u57df\u6a21\u578b\u5230\u5e95\u662f\u548b\u6837\u7684\uff0c\u5b83\u5230\u5e95\u89e3\u51b3\u4e86\u54ea\u4e9b\u95ee\u9898\uff0c\u4e86\u89e3\u5b8c\u9886\u57df\u6a21\u578b\u4e4b\u540e\uff0c\u5176\u5b9e\u5c31\u662f\u5982\u4f55\u6d88\u8d39\u8fd9\u4e2a\u9886\u57df\u6a21\u578b\u7684\u89c6\u56fe\u5c42\u4e86\uff0c\u8fd9\u4e00\u5c42\u5c31\u53ea\u9700\u8981\u770b\u5177\u4f53\u7ec4\u4ef6\u7684\u6587\u6863\u5373\u53ef\u4e86\u3002\n\n\u5173\u4e8e\u6587\u6863\n\u56e0\u4e3a Formily \u7684\u5b66\u4e60\u6210\u672c\u8fd8\u662f\u6bd4\u8f83\u9ad8\u7684\uff0c\u60f3\u8981\u5feb\u901f\u4e86\u89e3 Formily \u7684\u5168\u8c8c\uff0c\u6700\u91cd\u8981\u7684\u8fd8\u662f\u770b\u6587\u6863\uff0c\u53ea\u662f\u6587\u6863\u600e\u4e48\u770b\uff0c\u4ece\u54ea\u91cc\u770b\u4f1a\u6bd4\u8f83\u91cd\u8981\uff0c\u4e0b\u9762\u6211\u4eec\u9488\u5bf9\u4e0d\u540c\u7528\u6237\u7ed9\u51fa\u4e86\u4e0d\u540c\u7684\u6587\u6863\u5b66\u4e60\u8def\u7ebf\u3002\n  `} />\n}\n\nexport default App;\n"}},dependencies:{react:{version:"18.2.0"},fireformily:{version:"0.1.17"}},componentName:"LongText",identifier:"LongText-demo"}},"querylist-querylistall":{component:(0,c.D8)({loader:function(){var n=(0,s.Z)((0,a.Z)().mark((function n(){return(0,a.Z)().wrap((function(n){while(1)switch(n.prev=n.next){case 0:return n.next=2,Promise.all([t.e(337),t.e(467),t.e(591),t.e(753),t.e(965),t.e(191)]).then(t.bind(t,82511));case 2:return n.abrupt("return",n.sent.default);case 3:case"end":return n.stop()}}),n)})));function e(){return n.apply(this,arguments)}return e}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:d},"shared.ts":{import:"./shared",content:m}},dependencies:{"@formily/antd":{version:"2.2.5",css:"@formily/antd/dist/antd.css"},antd:{version:"<=4.22.8",css:"antd/dist/antd.css"},react:{version:">=16.8.0"},"@formily/core":{version:"2.2.5"},"@formily/react":{version:"2.2.5"},fireformily:{version:"0.1.17"},"@ant-design/icons":{version:"4.x"},"@types/react":{version:">=16.8.0"},"@types/react-dom":{version:">=16.8.0"},"react-dom":{version:">=16.8.0"},"react-is":{version:">=16.8.0"},moment:{version:"2.29.4"},"@faker-js/faker":{version:"7.5.0"}},componentName:"QueryList",identifier:"querylist-querylistall"}},"suggestion-suggestiondemo":{component:(0,c.D8)({loader:function(){var n=(0,s.Z)((0,a.Z)().mark((function n(){return(0,a.Z)().wrap((function(n){while(1)switch(n.prev=n.next){case 0:return n.next=2,Promise.all([t.e(337),t.e(467),t.e(591),t.e(706),t.e(965),t.e(539)]).then(t.bind(t,13858));case 2:return n.abrupt("return",n.sent.default);case 3:case"end":return n.stop()}}),n)})));function e(){return n.apply(this,arguments)}return e}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:u},"mock.ts":{import:"./mock",content:f}},dependencies:{"@formily/antd":{version:"2.2.5",css:"@formily/antd/dist/antd.css"},"@formily/core":{version:"2.2.5"},"@formily/react":{version:"2.2.5"},fireformily:{version:"0.1.17"},react:{version:">=16.8.0"},"@ant-design/icons":{version:"4.x"},"@types/react":{version:">=16.8.0"},"@types/react-dom":{version:">=16.8.0"},antd:{version:"<=4.22.8",css:"antd/dist/antd.css"},"react-dom":{version:">=16.8.0"},"react-is":{version:">=16.8.0"},"fetch-jsonp":{version:"1.2.3"},qs:{version:"6.11.0"}},componentName:"Suggestion",identifier:"suggestion-suggestiondemo"}},"treenodes-demo":{component:(0,c.D8)({loader:function(){var n=(0,s.Z)((0,a.Z)().mark((function n(){return(0,a.Z)().wrap((function(n){while(1)switch(n.prev=n.next){case 0:return n.next=2,Promise.all([t.e(337),t.e(467),t.e(591),t.e(965),t.e(72)]).then(t.bind(t,22112));case 2:return n.abrupt("return",n.sent.default);case 3:case"end":return n.stop()}}),n)})));function e(){return n.apply(this,arguments)}return e}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:g},"mock.ts":{import:"./mock",content:y}},dependencies:{"@ant-design/icons":{version:"4.x"},"@formily/antd":{version:"2.2.5",css:"@formily/antd/dist/antd.css"},"@formily/core":{version:"2.2.5"},"@formily/react":{version:"2.2.5"},antd:{version:"<=4.22.8",css:"antd/dist/antd.css"},fireformily:{version:"0.1.17"},react:{version:">=16.9.0"},"react-dom":{version:">=16.9.0"},"@types/react":{version:">=16.8.0"},"@types/react-dom":{version:">=16.8.0"},"react-is":{version:">=16.8.0"}},componentName:"TreeNodes",identifier:"treenodes-demo"}},"live-todos":{component:(0,c.D8)({loader:function(){var n=(0,s.Z)((0,a.Z)().mark((function n(){return(0,a.Z)().wrap((function(n){while(1)switch(n.prev=n.next){case 0:return n.next=2,Promise.all([t.e(337),t.e(467),t.e(591),t.e(965),t.e(818)]).then(t.bind(t,47952));case 2:return n.abrupt("return",n.sent.default);case 3:case"end":return n.stop()}}),n)})));function e(){return n.apply(this,arguments)}return e}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:v}},dependencies:{"@formily/react":{version:"2.2.5"},react:{version:">=16.8.0"},fireformily:{version:"0.1.17"},"@types/react":{version:">=16.8.0"},"@types/react-dom":{version:">=16.8.0"},"react-dom":{version:">=16.8.0"},"react-is":{version:">=16.8.0"}},componentName:"live",title:"\u571f\u8c46\u4e1d",identifier:"live-todos"}},"live-nobabel":{component:(0,c.D8)({loader:function(){var n=(0,s.Z)((0,a.Z)().mark((function n(){return(0,a.Z)().wrap((function(n){while(1)switch(n.prev=n.next){case 0:return n.next=2,Promise.all([t.e(337),t.e(467),t.e(591),t.e(965),t.e(818)]).then(t.bind(t,77955));case 2:return n.abrupt("return",n.sent.default);case 3:case"end":return n.stop()}}),n)})));function e(){return n.apply(this,arguments)}return e}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:x}},dependencies:{fireformily:{version:"0.1.17"},"@formily/react":{version:"2.2.5"},react:{version:">=16.8.0"},"@types/react":{version:">=16.8.0"},"@types/react-dom":{version:">=16.8.0"},"react-dom":{version:">=16.8.0"},"react-is":{version:">=16.8.0"}},componentName:"live",title:"\u4e0d\u7528 babel \u63d2\u4ef6",identifier:"live-nobabel"}},"live-withbabel":{component:(0,c.D8)({loader:function(){var n=(0,s.Z)((0,a.Z)().mark((function n(){return(0,a.Z)().wrap((function(n){while(1)switch(n.prev=n.next){case 0:return n.next=2,Promise.all([t.e(337),t.e(467),t.e(591),t.e(965),t.e(818)]).then(t.bind(t,50377));case 2:return n.abrupt("return",n.sent.default);case 3:case"end":return n.stop()}}),n)})));function e(){return n.apply(this,arguments)}return e}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:h}},dependencies:{"@formily/react":{version:"2.2.5"},fireformily:{version:"0.1.17"},react:{version:">=16.8.0"},"@types/react":{version:">=16.8.0"},"@types/react-dom":{version:">=16.8.0"},"react-dom":{version:">=16.8.0"},"react-is":{version:">=16.8.0"}},componentName:"live",title:"\u4f7f\u7528 babel \u63d2\u4ef6",identifier:"live-withbabel"}}},S=JSON.parse('{"Dict":{"default":[{"identifier":"value","description":"\u5bf9\u5e94\u679a\u4e3e\u503c","type":"Input = string | number | Input[];"},{"identifier":"type","description":"\u6e32\u67d3\u5f62\u5f0f Badeg | Tag","type":"\\"badge\\" | \\"tag\\""},{"identifier":"options","description":"\u9009\u9879","type":"{ key: string | number; label: string; value: string | number; color?: \\"magenta\\" | \\"green\\" | \\"cyan\\" | \\"geekblue\\" | \\"purple\\" | \\"red\\" | \\"orange\\" | \\"lime\\" | \\"blue\\" | \\"volcano\\" | \\"gold\\" | ... 5 more ... | CSSColor; }[]"},{"identifier":"strict","description":"\u4e25\u683c\u6a21\u5f0f, \u5c06\u4f7f\u7528 === \u6765\u5bf9\u6bd4 value\\n\u975e\u4e25\u683c\u6a21\u5f0f\u4e0b\u91c7\u7528 == \u5bf9\u6bd4","type":"boolean","default":"false"}]},"ImageView":{"default":[{"identifier":"value","description":"\u56fe\u7247\u5730\u5740(\u652f\u6301\u6570\u7ec4)","type":"string | string[]"},{"identifier":"style","description":"\u6837\u5f0f","type":"CSSProperties","default":"{ width: \'60px\', height: \'60px\', objectFit: \'contain\' }"}]},"Suggestion":{"default":[{"identifier":"placeholder","type":"string"},{"identifier":"style","type":"CSSProperties"},{"identifier":"labelInValue","type":"boolean"},{"identifier":"params","type":"object"},{"identifier":"multiple","type":"boolean"},{"identifier":"value","type":"Input"},{"identifier":"onChange","type":"(neo: Input) => void"},{"identifier":"disabled","type":"boolean"},{"identifier":"suggest","type":"(parmas: object & { kw: string; }) => Promise<{ label: string; value: string | number; }[]>"}]}}'),k=t(49215),F=n=>r.createElement(k.Z,(0,o.Z)({},n,{config:i,demos:b,apis:S}))}}]);